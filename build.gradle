plugins {
    id 'java'
    id 'org.springframework.boot' version '3.3.0'
    id 'io.spring.dependency-management' version '1.1.5'
}

group = 'com.polarbookshop'
version = '0.0.1-SNAPSHOT'

java {
    sourceCompatibility = '17'
}

repositories {
    mavenCentral()
}

//注解处理器
configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

ext {
    // spring cloud的版本
    set('springCloudVersion', "2023.0.2")
    // 指定Testcontainers版本，用于配置测试用、轻量级的postgreSql容器
    set('testcontainersVersion',"1.17.3")
}

dependencies {
    //引入lombok
    compileOnly 'org.projectlombok:lombok:1.18.30'
    annotationProcessor 'org.projectlombok:lombok:1.18.30','org.springframework.boot:spring-boot-configuration-processor'
    testCompileOnly 'org.projectlombok:lombok:1.18.30'
    testAnnotationProcessor 'org.projectlombok:lombok:1.18.30'

    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    // 使用spring cloud config client
    implementation 'org.springframework.cloud:spring-cloud-starter-config'
    // 使用重试模式
    implementation 'org.springframework.retry:spring-retry'
    // 使用配置刷新
    implementation 'org.springframework.boot:spring-boot-starter-actuator'

    // 引入spring data jdbc
    implementation 'org.springframework.boot:spring-boot-starter-data-jdbc'
    // 提供postgreSql驱动
    runtimeOnly 'org.postgresql:postgresql'

    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    //响应式web框架webflux
    testImplementation 'org.springframework.boot:spring-boot-starter-webflux'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

    // 容器化管理测试用postgreSql数据库
    testImplementation 'org.testcontainers:postgresql'
}

dependencyManagement {
    imports {
        // spring cloud依赖管理的BOM
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
        mavenBom "org.testcontainers:testcontainers-bom:${testcontainersVersion}"
    }
}

tasks.named('test') {
    useJUnitPlatform()
}
