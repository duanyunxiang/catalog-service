spring:
  application:
    name: catalog-service
  lifecycle:
    # 优雅关机宽限期
    timeout-per-shutdown-phase: 15s
  security:
    oauth2:
      resourceserver:
        # 声明使用jwt格式令牌
        jwt:
          # 资源服务器需要从Keycloak获取公钥来解析访问令牌
          issuer-uri: http://localhost:8080/realms/PolarBookshop
  # 使用配置服务器，中心化的属性高于本地属性
  config:
    # optional表示尝试从配置服务获取配置，如获取不到就取本地
    import: "optional:configserver:"
  cloud:
    config:
      # 配置服务器地址
      uri: http://localhost:8888
      # 连接超时时间（毫秒）
      request-connect-timeout: 5000
      # 读取数据超时时间（毫秒）
      request-read-timeout: 5000
      # 连接配置服务失败，是否为致命错误，true时才会启用重试
      fail-fast: false
      # 重试策略配置
      retry:
        # 最大重试次数
        max-attempts: 3
        # 重试初始间隔
        initial-interval: 1000
        # 重试最大间隔
        max-interval: 2000
        # 下一次间隔的乘数
        multiplier: 1.1
  # 配置数据源
  datasource:
    username: user
    password: password
    url: jdbc:postgresql://localhost:5432/polardb_catalog
    # spring使用的连接池
    hikari:
      connection-timeout: 2000
      maximum-pool-size: 5
  # 应用启动时，从数据库脚本schema.sql初始化数据库模式
  # sql.init.mode: always

management:
  endpoints:
    web:
      exposure:
        # 通过http暴露/actuator/health端点，/actuator/metrics为度量的端点，prometheus向Grafana暴露度量端点
        include: health, metrics, prometheus
  endpoint:
    health:
      # 始终展示应用详情和组件详情
      show-details: always
      show-components: always
      probes:
        # 启用对健康探针的支持
        enabled: true
  metrics:
    tags:
      # 添加带有应用名称的Micrometer通用标签，这会将一个Prometheus标记应用到所有度量中
      application: ${spring.application.name}

# spring.profiles.active: testdata

# 配置嵌入式服务器
server:
  port: 9001
  # 启用优雅关机
  shutdown: graceful
  tomcat:
    # 等待响应返回超时时间
    connection-timeout: 2s
    keep-alive-timeout: 15s
    # 每个请求一个线程
    threads:
      max: 50
      # 线程池最小线程数
      min-spare: 5

logging:
  pattern:
    # 在日志级别旁边，包含应用名、跟踪ID和跨度ID
    level: "%5p [${spring.application.name},%X{trace_id},%X{span_id}]"

# 自定义属性
polar:
  greeting: Welcome to the local book catalog!
  testdata:
    enabled: true
  # 是否启用InMemoryBookRepository
  enableMemRepo: false
